alter session set NLS_DATE_FORMAT='yyyy/mm/dd:hh:mi:ssam'

select sysdate from dual;

INSERT INTO PRIMARY_DS_TYPES ( PRIMARY_DS_TYPE_ID,  PRIMARY_DS_TYPE) SELECT ID, TYPE FROM CMS_DBS_PROD_GLOBAL.PRIMARYDSTYPE;
commit;
select 'Done insert PRIMARY_DS_TYPES' from dual;
select sysdate from dual;

INSERT INTO PRIMARY_DATASETS(PRIMARY_DS_ID, PRIMARY_DS_NAME, PRIMARY_DS_TYPE_ID, CREATION_DATE, CREATE_BY)  
SELECT PD.ID, PD.NAME, PD.TYPE, PD.CREATIONDATE, PS.DISTINGUISHEDNAME 
FROM CMS_DBS_PROD_GLOBAL.PRIMARYDATASET PD join CMS_DBS_PROD_GLOBAL.PERSON PS ON  PS.ID=PD.CREATEDBY;
commit;
select 'Done insert PRIMARY_DATASETS' from dual;
select sysdate from dual;

INSERT INTO APPLICATION_EXECUTABLES (APP_EXEC_ID, APP_NAME) SELECT ID, EXECUTABLENAME FROM CMS_DBS_PROD_GLOBAL.APPEXECUTABLE;
INSERT INTO RELEASE_VERSIONS ( RELEASE_VERSION_ID, RELEASE_VERSION ) SELECT ID, VERSION FROM CMS_DBS_PROD_GLOBAL.APPVERSION;
INSERT INTO PARAMETER_SET_HASHES ( PARAMETER_SET_HASH_ID, PSET_HASH, NAME ) SELECT ID, HASH, NAME FROM CMS_DBS_PROD_GLOBAL.QUERYABLEPARAMETERSET;
--FAKING APPLICATIONFAMILY AS OUTPUT_MODULE_LABEL, THIS KEEPS THE UNIQUENESS
INSERT INTO OUTPUT_MODULE_CONFIGS ( OUTPUT_MOD_CONFIG_ID, APP_EXEC_ID, RELEASE_VERSION_ID, PARAMETER_SET_HASH_ID, 
                                    OUTPUT_MODULE_LABEL, CREATION_DATE, CREATE_BY) 
SELECT AL.ID, AL.EXECUTABLENAME, AL.APPLICATIONVERSION, AL.PARAMETERSETID, AL.APPLICATIONFAMILY, AL.CREATIONDATE, PS.DISTINGUISHEDNAME  
FROM CMS_DBS_PROD_GLOBAL.ALGORITHMCONFIG AL JOIN CMS_DBS_PROD_GLOBAL.PERSON PS on PS.ID=AL.CREATEDBY;
commit;
select 'Done insert OUTPUT_MODULE_CONFIGS' from dual;
select sysdate from dual;


INSERT INTO PHYSICS_GROUPS ( PHYSICS_GROUP_ID, PHYSICS_GROUP_NAME) SELECT ID, PHYSICSGROUPNAME FROM CMS_DBS_PROD_GLOBAL.PHYSICSGROUP;

--WE WILL USE THE STATUS (FROM DBS-2) TO FILL IN TYPE IN DBS-3, LATER WE CAN FIX THIS
INSERT INTO DATASET_ACCESS_TYPES (DATASET_ACCESS_TYPE_ID, DATASET_ACCESS_TYPE) SELECT ID, STATUS FROM CMS_DBS_PROD_GLOBAL.PROCDSSTATUS;

INSERT INTO DATA_TIERS ( DATA_TIER_ID, DATA_TIER_NAME ) SELECT ID, NAME FROM CMS_DBS_PROD_GLOBAL.DATATIER;
INSERT INTO ACQUISITION_ERAS ( ACQUISITION_ERA_NAME ) SELECT DISTINCT AQUISITIONERA FROM CMS_DBS_PROD_GLOBAL.PROCESSEDDATASET where AQUISITIONERA IS NOT NULL;

INSERT INTO PROCESSED_DATASETS ( PROCESSED_DS_NAME ) SELECT DISTINCT NAME FROM CMS_DBS_PROD_GLOBAL.PROCESSEDDATASET;
commit;
select 'Done insert PROCESSED_DATASETS ' from dual;
select sysdate from dual;

--INSERT ALL DATASETS AS INVALID (IS_DATASET_VALID==0)

INSERT INTO DATASETS (
	 DATASET_ID,                               
	  DATASET,
	   IS_DATASET_VALID,                         
	    PRIMARY_DS_ID,                            
	     PROCESSED_DS_ID,                          
	      DATA_TIER_ID,          
	       DATASET_ACCESS_TYPE_ID,      
	        ACQUISITION_ERA_ID,
		 PHYSICS_GROUP_ID,
		  XTCROSSSECTION,
		    CREATION_DATE,
		     CREATE_BY,
		      LAST_MODIFICATION_DATE,
		       LAST_MODIFIED_BY
	)
SELECT DS.ID, '/' || P.NAME || '/' || DS.NAME || '/' || DT.NAME, 0, P.ID, PDS.PROCESSED_DS_ID, DT.ID, 1,
       ACQ.ACQUISITION_ERA_ID, DS.PHYSICSGROUP, DS.XTCROSSSECTION,
       DS.CREATIONDATE, PDCB.DISTINGUISHEDNAME, DS.LASTMODIFICATIONDATE, PDLM.DISTINGUISHEDNAME
       FROM CMS_DBS_PROD_GLOBAL.PROCESSEDDATASET DS
       JOIN CMS_DBS_PROD_GLOBAL.PRIMARYDATASET P
           ON P.ID=DS.PRIMARYDATASET
	   JOIN CMS_DBS_PROD_GLOBAL.DATATIER DT
	       ON DT.ID=DS.DATATIER
	       JOIN PROCESSED_DATASETS PDS
	           ON PDS.PROCESSED_DS_NAME=DS.NAME
		   LEFT OUTER JOIN ACQUISITION_ERAS ACQ
		       ON ACQ.ACQUISITION_ERA_NAME=DS.AQUISITIONERA
		       --LEFT OUTER JOIN PHYSICS_GROUPS PG
		           --ON DS.PHYSICSGROUP=PG.PHYSICS_GROUP_ID
			   LEFT OUTER JOIN CMS_DBS_PROD_GLOBAL.PERSON PDCB
			       ON DS.CREATEDBY=PDCB.ID
			       LEFT OUTER JOIN CMS_DBS_PROD_GLOBAL.PERSON PDLM
			           ON DS.LASTMODIFIEDBY=PDLM.ID;   

commit;
select 'Done insert DATASET' from dual;
select sysdate from dual;


--SET THE STATUS OF DATASETS AS VALID, IF THEY ARE MARKED AS 'VALID' IN DBS-2
UPDATE DATASETS DS SET DS.IS_DATASET_VALID=1 WHERE DS.DATASET_ID IN (SELECT PDS.ID FROM CMS_DBS_PROD_GLOBAL.PROCESSEDDATASET PDS, CMS_DBS_PROD_GLOBAL.PROCDSSTATUS ST WHERE ST.ID=PDS.STATUS AND ST.STATUS='VALID');
--SET THE TYPE OF DATASETS BASED ON "STATUS" IN DBS-2
UPDATE DATASETS DS SET DS.DATASET_ACCESS_TYPE_ID=(SELECT DATASET_ACCESS_TYPE_ID FROM DATASET_ACCESS_TYPES WHERE DATASET_ACCESS_TYPE='PRODUCTION') 
WHERE DS.DATASET_ID IN (SELECT PDS.ID FROM CMS_DBS_PROD_GLOBAL.PROCESSEDDATASET PDS, CMS_DBS_PROD_GLOBAL.PROCDSSTATUS ST WHERE ST.ID=PDS.STATUS AND ST.STATUS='PRODUCTION');

UPDATE DATASETS DS SET DS.DATASET_ACCESS_TYPE_ID=(SELECT DATASET_ACCESS_TYPE_ID FROM DATASET_ACCESS_TYPES WHERE DATASET_ACCESS_TYPE='DELETED') 
WHERE DS.DATASET_ID IN (SELECT PDS.ID FROM CMS_DBS_PROD_GLOBAL.PROCESSEDDATASET PDS, CMS_DBS_PROD_GLOBAL.PROCDSSTATUS ST WHERE ST.ID =PDS.STATUS AND ST.STATUS='DELETED');

UPDATE DATASETS DS SET DS.DATASET_ACCESS_TYPE_ID=(SELECT DATASET_ACCESS_TYPE_ID FROM DATASET_ACCESS_TYPES WHERE DATASET_ACCESS_TYPE='DEPRECATED') 
WHERE DS.DATASET_ID IN (SELECT PDS.ID FROM CMS_DBS_PROD_GLOBAL.PROCESSEDDATASET PDS, CMS_DBS_PROD_GLOBAL.PROCDSSTATUS ST WHERE ST.ID=PDS.STATUS AND ST.STATUS='DEPRECATED');

commit;
select 'Done update DATASET' from dual;
select sysdate from dual;


INSERT INTO DATASET_PARENTS(THIS_DATASET_ID, PARENT_DATASET_ID)
SELECT  DSP.THISDATASET, DSP.ITSPARENT FROM CMS_DBS_PROD_GLOBAL.PROCDSPARENT DSP;

commit;
select 'Done inser DATASET_PARENTS' from dual;
select sysdate from dual;

INSERT INTO DATASET_OUTPUT_MOD_CONFIGS(DS_OUTPUT_MOD_CONF_ID, DATASET_ID, OUTPUT_MOD_CONFIG_ID)
SELECT PA.ID, PA.DATASET, PA.ALGORITHM FROM CMS_DBS_PROD_GLOBAL.PROCALGO PA;

commit;
select ' Done inser DATASET_OUTPUT_MOD_CONFIGS' from dual;
select sysdate from dual;

INSERT INTO BLOCKS
(
  BLOCK_ID,                                 
   BLOCK_NAME,
    DATASET_ID,
     OPEN_FOR_WRITING, 
      BLOCK_SIZE,
       FILE_COUNT,
        CREATION_DATE,
	 CREATE_BY,
	  LAST_MODIFICATION_DATE,
	   ORIGIN_SITE_NAME
	  )
SELECT B.ID, B.NAME, B.DATASET, B.OPENFORWRITING, 
              B.BLOCKSIZE, B.NUMBEROFFILES, B.CREATIONDATE,
	             PDCB.DISTINGUISHEDNAME, B.LASTMODIFICATIONDATE,
		     'unkonw'
		     FROM CMS_DBS_PROD_GLOBAL.BLOCK B
		     LEFT OUTER JOIN CMS_DBS_PROD_GLOBAL.PERSON PDCB
		         ON B.CREATEDBY=PDCB.ID;

commit;
select 'Done inser BLOCKS' from dual;
select sysdate from dual;

INSERT into BLOCK_PARENTS(THIS_BLOCK_ID, PARENT_BLOCK_ID)
SELECT BP.THISBLOCK, BP.ITSPARENT FROM CMS_DBS_PROD_GLOBAL.BLOCKPARENT BP; 
commit;
select 'Done inser BLOCKS' from dual;
select sysdate from dual;


INSERT INTO FILE_DATA_TYPES ( FILE_TYPE_ID,  FILE_TYPE ) SELECT ID, TYPE FROM CMS_DBS_PROD_GLOBAL.FILETYPE;
commit;
select 'Done inser FILE_DATA_TYPES' from dual;
select sysdate from dual;


INSERT INTO FILES
(
  FILE_ID,
   LOGICAL_FILE_NAME,
    IS_FILE_VALID,
     DATASET_ID,
      BLOCK_ID,
       FILE_TYPE_ID,
        CHECK_SUM,
	 EVENT_COUNT,
	  FILE_SIZE,
	   ADLER32,
	    MD5,
	     AUTO_CROSS_SECTION,
	      CREATION_DATE,
	       CREATE_BY,
	        LAST_MODIFICATION_DATE,
		 LAST_MODIFIED_BY
		 )
SELECT F.ID, F.LOGICALFILENAME, F.VALIDATIONSTATUS, F.DATASET, F.BLOCK,
       F.FILETYPE, F.CHECKSUM, F.NUMBEROFEVENTS, F.FILESIZE, F.ADLER32,
       F.MD5, F.AUTOCROSSSECTION, F.CREATIONDATE,
       PDCB.DISTINGUISHEDNAME, F.LASTMODIFICATIONDATE, PDLM.DISTINGUISHEDNAME
       FROM CMS_DBS_PROD_GLOBAL.FILES F
       LEFT OUTER JOIN CMS_DBS_PROD_GLOBAL.PERSON PDCB
           ON F.CREATEDBY=PDCB.ID
	   LEFT OUTER JOIN CMS_DBS_PROD_GLOBAL.PERSON PDLM
	       ON F.LASTMODIFIEDBY=PDLM.ID;
commit;
select 'Done inser FILES' from dual;
select sysdate from dual;

INSERT INTO FILE_PARENTS(THIS_FILE_ID, PARENT_FILE_ID)
SELECT FP.THISFILE, FP.ITSPARENT FROM CMS_DBS_PROD_GLOBAL.FILEPARENTAGE FP;
commit;
select 'Done inser FILE_PARENTS' from dual;
select sysdate from dual;

